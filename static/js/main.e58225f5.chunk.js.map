{"version":3,"sources":["components/ColorConverter/ColorConverter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ERROR_TEXT","DEFAULT_STATE","hexString","rgbString","componentBackgroundColor","ColorConverter","useState","state","setState","FormStyle","backgroundColor","rgbClass","classnames","className","style","type","value","onChange","event","target","length","prev","rgbValue","matches","exec","slice","map","parseInt","join","hex2Rgb","maxLength","placeholder","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGMA,EAAa,wCACbC,EAAgB,CACpBC,UAAW,GACXC,UAAW,GACXC,yBAA0B,WAGb,SAASC,IAAkB,IAAD,EACbC,mBAASL,GADI,mBAChCM,EADgC,KACzBC,EADyB,KAGjCC,EAAY,CAChBC,gBAAiBH,EAAMH,0BAGnBO,EAAWC,IAAW,CAC1B,OAAS,EACT,MAASL,EAAMJ,YAAcH,IA4B/B,OACE,uBAAMa,UAAU,OAAOC,MAAOL,EAA9B,UACE,uBAAOI,UAAU,QAAQE,KAAK,OAAOC,MAAOT,EAAML,UAAWe,SAtB3C,SAACC,GACrB,GAAIA,EAAMC,OAAOH,MAAMI,OAAS,EAC9BZ,GAAS,SAACa,GAAD,mBAAC,eACFA,GADC,IACKnB,UAAWgB,EAAMC,OAAOH,MAAOb,UAAW,GAAIC,yBAA0B,mBAFxF,CAMA,IAAMkB,EAZR,SAAiBpB,GACf,IAAMqB,EAAU,2CAA2CC,KAAKtB,GAChE,OAAOqB,EAAO,cAAUA,EAAQE,MAAM,GAAGC,KAAI,SAACV,GAAD,OAAWW,SAASX,EAAO,OAAKY,KAAK,MAApE,KAA+EL,EAU5EM,CAAQX,EAAMC,OAAOH,OAGpCR,EADEc,EACO,CACPpB,UAAWgB,EAAMC,OAAOH,MACxBb,UAAWmB,EACXlB,yBAA0Bc,EAAMC,OAAOH,OAIlC,SAACK,GAAD,mBAAC,eAAeA,GAAhB,IAAsBlB,UAAWH,EAAYI,yBAA0B,gBAKQ0B,UAAU,IAC9FC,YAAY,iKACd,uBAAOlB,UAAWF,EAAUI,KAAK,OAAOC,MAAOT,EAAMJ,UAAW6B,SAAS,gBCrChEC,MAVf,WAEE,OACE,qBAAKpB,UAAU,qBAAf,SACE,cAACR,EAAD,OCIS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e58225f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst ERROR_TEXT = 'Ошибка!';\r\nconst DEFAULT_STATE = {\r\n  hexString: '',\r\n  rgbString: '',\r\n  componentBackgroundColor: '#ffffff',\r\n};\r\n\r\nexport default function ColorConverter() {\r\n  const [state, setState] = useState(DEFAULT_STATE);\r\n\r\n  const FormStyle = {\r\n    backgroundColor: state.componentBackgroundColor,\r\n  }\r\n\r\n  const rgbClass = classnames({\r\n    'input': true,\r\n    'error': state.rgbString === ERROR_TEXT,\r\n  });\r\n\r\n  function hex2Rgb(hexString) {\r\n    const matches = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexString);\r\n    return matches ? `rgb(${matches.slice(1).map((value) => parseInt(value, 16)).join(', ')})` : matches;\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    if (event.target.value.length < 7) {\r\n      setState((prev) =>\r\n        ({ ...prev, hexString: event.target.value, rgbString: '', componentBackgroundColor: '#ffffff' }));\r\n      return;\r\n    }\r\n\r\n    const rgbValue = hex2Rgb(event.target.value);\r\n\r\n    if (rgbValue) {\r\n      setState({\r\n        hexString: event.target.value,\r\n        rgbString: rgbValue,\r\n        componentBackgroundColor: event.target.value,\r\n      });\r\n      return;\r\n    }\r\n    setState((prev) => ({ ...prev, rgbString: ERROR_TEXT, componentBackgroundColor: '#e74c3c' }));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" style={FormStyle}>\r\n      <input className=\"input\" type=\"text\" value={state.hexString} onChange={onInputChange} maxLength=\"7\"\r\n        placeholder=\"Введите hex-код цвета (с символом #)\" />\r\n      <input className={rgbClass} type=\"text\" value={state.rgbString} readOnly=\"readonly\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport ColorConverter from './components/ColorConverter/ColorConverter';\n\nfunction App() {\n\n  return (\n    <div className=\"component__wrapper\">\n      <ColorConverter />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}